/********************************************************************************************************/
/* Създаване на помощно view за Условията към тестовите сценарии */
CREATE OR ALTER VIEW dbo.[VIEW_CASH_PAYMENTS_CONDITIONS]
AS
	WITH [CTE_CUST_EGFN_TYPE] AS 
	(
		SELECT [X].*
		FROM ( 
			VALUES	( 1 , 'ЕГН' )
				,	( 2 , 'ЕИК/БУЛСТАТ' )
				,	( 3 , 'БАЕ' )
				,	( 4 , 'ЛНЧ' )
				,	( 5 , 'Функционално ЕГН' )
				,	( 6 , 'Функционално ЛНЧ (ЧФЛ)' )
				,	( 7 , 'Функционално ЕИК (МЮЛ)' ) 
				,	( 8 , 'Функционално ЕИК (ЧЮЛ)' )
				,	( 9 , 'Идентификатор за клиенти по ЗЗКИ' )
		) X([ID], [NAME])
	)
	, [CTE_CUSTOMER_CHARACTERISTIC] AS 
	(
		SELECT [X].*
		FROM ( 
			VALUES	(0,	'Банков клиент' )
				,	(1,	'Външен клиент' )
				,	(2,	'Prospect клиент' )
				,	(3,	'Действителен собственик' )
				,	(4,	'Клиент без активни продукти' )
		) X([ID], [NAME])
	)
	, [CTE_CUSTOMER_AGE] AS 
	(
		SELECT [X].*, GetDate() as [SYS_DATE]
		FROM (
			VALUES	(-1, 00, 190, 'Без значение' )
				,	( 1, 18, 190, 'Пълнолетно лице (над 18г.)' )
				,	( 2, 14,  17, 'Непълнолетно физическо лице (от 14г. до 18г.)' )
				,	( 3, 00,  13, 'Малолетно физическо лице (до 14г.)' )
				,	( 4, 00, 190, 'Външен клиент' )
		) X([ID], [AGE_MIN], [AGE_MAX], [NAME])
	)
	, [CTE_CCY] AS 
	(
		SELECT [X].*
		FROM ( 
			VALUES ( 36, 'AUD'), (100, 'BGN'), (124, 'CAD'), (756,	'CHF')
				,  (826, 'GBP'), (840,	'USD'), (946, 'RON'), (978,	'EUR')
		) X([ID], [NAME])		
	)
	SELECT DISTINCT
		COALESCE([PREV].[ROW_ID], BLOCKSUM_TA.ROW_ID) AS [ROW_ID]
		, COALESCE([PREV].[TA_TYPE], BLOCKSUM_TA.TA_TYPE) AS [TA_TYPE]
		, COALESCE([PREV].[DB_TYPE], BLOCKSUM_TA.DB_TYPE) AS [DB_TYPE]
		, [CUST].[ROW_ID] AS [CUST_ROW_ID]
		, [DREG].[ROW_ID] AS [DEAL_ROW_ID]
		, [CORS].[ROW_ID] AS [CORS_ROW_ID]
		, [PSPEC].[ROW_ID] AS [PSPEC_ROW_ID]
		, [PROXY].[ROW_ID] AS [PROXY_ROW_ID]
		, [CUST_BEN].[ROW_ID] AS [CUST_BEN_ROW_ID]
		, [DBEN].[ROW_ID] AS [DEAL_BEN_ROW_ID]
		/* Условия за титуляра dbo.[DT015_CUSTOMERS_ACTIONS_TA] */
		, [CUST].[SECTOR] AS [SECTOR]
		, [CUST].[UNIFIED] AS [UNIFIED]
		, [CUST].[IS_SERVICE] AS [IS_SERVICE]
		, [CUST].[EGFN_TYPE] AS [EGFN_TYPE]
		, IsNull([CTE_CUST_EGFN_TYPE].[ID], - 1) AS [CODE_EGFN_TYPE]
		, [CUST].[DB_CLIENT_TYPE] AS [DB_CLIENT_TYPE_DT300]
		, [CUST].[VALID_ID] AS [VALID_ID]
		, [CUST].[CUSTOMER_CHARACTERISTIC] AS [CUSTOMER_CHARACTERISTIC]
		, IsNull(CTE_CUSTOMER_CHARACTERISTIC.ID, - 1) AS [CODE_CUSTOMER_CHARACTERISTIC]
		, [CUST].[CUSTOMER_AGE] AS [CUSTOMER_AGE]
		, cast(IsNull(DATEADD(yy, - CTE_CUSTOMER_AGE.[AGE_MAX], CTE_CUSTOMER_AGE.[SYS_DATE]), 0) AS DATE) AS [CUSTOMER_BIRTH_DATE_MIN]
		, cast(IsNull(DATEADD(yy, - CTE_CUSTOMER_AGE.[AGE_MIN], CTE_CUSTOMER_AGE.[SYS_DATE]), 999) AS DATE) AS [CUSTOMER_BIRTH_DATE_MAX]
		, [CUST].[IS_PROXY] AS [IS_PROXY]
		, [CUST].[IS_UNIQUE] AS [IS_UNIQUE_CUSTOMER]
		, [CUST].[HAVE_CREDIT] AS [HAVE_CREDIT]
		, [CUST].[PROXY_COUNT] AS [PROXY_COUNT]
		, [CUST].[COLLECT_TAX_FROM_ALL_ACC] AS [COLLECT_TAX_FROM_ALL_ACC]
		/* Условия за пълномощника dbo.[PROXY_SPEC_TA] */
		, [PSPEC].[UI_RAZPOREDITEL] AS [UI_RAZPOREDITEL]
		, [PSPEC].[UI_UNLIMITED] AS [UI_UNLIMITED]
		/* Условия за сделката dbo.[RAZPREG_TA] */
		, [DREG].UI_STD_DOG_CODE AS [UI_STD_DOG_CODE]
		, [DREG].[UI_INDIVIDUAL_DEAL] AS [UI_INDIVIDUAL_DEAL]
		, [DREG].[INT_COND_STDCONTRACT] AS [INT_COND_STDCONTRACT]
		, [DREG].UI_NM342_CODE AS [UI_NM342_CODE]
		, CASE WHEN IsNumeric([DREG].[UI_NM342_CODE]) = 1 THEN cast([DREG].[UI_NM342_CODE] AS INT) ELSE 0 END AS [CODE_UI_NM342]
		, [DREG].UI_CURRENCY_CODE AS [UI_CURRENCY_CODE]
		, [CCY_DEAL].[ID] AS [CCY_CODE_DEAL]
		, [DREG].UI_OTHER_ACCOUNT_FOR_TAX AS [UI_OTHER_ACCOUNT_FOR_TAX]
		, [DREG].UI_NOAUTOTAX AS [UI_NOAUTOTAX]
		, [DREG].UI_DENY_MANUAL_TAX_ASSIGN AS [UI_DENY_MANUAL_TAX_ASSIGN]
		, [DREG].UI_CAPIT_ON_BASE_DATE_OPEN AS [UI_CAPIT_ON_BASE_DATE_OPEN]
		, [DREG].UI_BANK_RECEIVABLES AS [UI_BANK_RECEIVABLES]
		, [DREG].UI_JOINT_TYPE AS [UI_JOINT_TYPE]
		, [DREG].LIMIT_AVAILABILITY AS [LIMIT_AVAILABILITY]
		, [DREG].DEAL_STATUS AS [DEAL_STATUS]
		, [DREG].LIMIT_TAX_UNCOLLECTED AS [LIMIT_TAX_UNCOLLECTED]
		, [DREG].LIMIT_ZAPOR AS [LIMIT_ZAPOR]
		, [DREG].IS_CORR AS [IS_CORR]
		, [DREG].IS_UNIQUE AS [IS_UNIQUE_DEAL]
		, [DREG].GS_PROGRAMME_CODE AS [GS_PROGRAMME_CODE]
		, [DREG].GS_CARD_PRODUCT AS [GS_CARD_PRODUCT]
		, [DREG].GS_PRODUCT_CODE AS [GS_PRODUCT_CODE]
		, CASE WHEN IsNumeric([DREG].[GS_PROGRAMME_CODE]) = 1 THEN cast([DREG].[GS_PROGRAMME_CODE] AS INT) ELSE 0 END AS CODE_GS_PROGRAMME
		, CASE WHEN IsNumeric([DREG].[GS_CARD_PRODUCT]) = 1 THEN cast([DREG].[GS_CARD_PRODUCT] AS INT) ELSE 0 END AS CODE_GS_CARD
		/* Условия за кореспондиращи сметки dbo.[DEALS_CORR_TA] */
		, [CORS].[CURRENCY] AS [CURRENCY_CORS]
		, [CCY_CORS].[ID] AS [CCY_CODE_CORS]
		, [CORS].[LIMIT_AVAILABILITY] AS [LIMIT_AVAILABILITY_CORS]
		/*,	[CORS].[LIMIT_TAX_UNCOLLECTED] AS [LIMIT_TAX_UNCOLLECTED_CORS] */
		/*,	[PROXY_ACC_TA]  Пълномощника, да има права за действието по избраната сметка */
		/* Условия за вносната бележка [PREV_COMMON_TA] */
		, [PREV].[RUNNING_ORDER] AS [RUNNING_ORDER]
		, [PREV].[TYPE_ACTION] AS [TYPE_ACTION]
		, [PREV].TAX_CODE AS [TAX_CODE]
		, [PREV].PREF_CODE AS [PREF_CODE]
		/* Зададената сума на документа и очакванета сума на таксата */
		, CASE WHEN IsNumeric([PREV].[UI_SUM]) = 0 THEN 0.0 ELSE cast([PREV].[UI_SUM] AS FLOAT) END AS DOC_SUM
		, [PREV].[TAX_SUM] AS [DOC_TAX_SUM]
		/* Условия за кореспондиращата за документ кредитен превод */
		, [PREV].[UI_INOUT_TRANSFER]
		, [PREV].[BETWEEN_OWN_ACCOUNTS]
		/* Вида на валутата на кореспондирашата партида от dbo.[RAZPREG_TA] */
		, [DBEN].[UI_CURRENCY_CODE] AS [UI_CURRENCY_CODE_BEN]
		, [CCY_DEAL_BEN].[ID] AS [CCY_CODE_DEAL_BEN]
		, [DBEN].[UI_STD_DOG_CODE] AS [UI_STD_DOG_CODE_BEN]
	FROM dbo.[DT015_CUSTOMERS_ACTIONS_TA] [CUST] WITH (NOLOCK)
	INNER JOIN dbo.[RAZPREG_TA] [DREG] WITH (NOLOCK)
		ON [DREG].[REF_ID] = [CUST].[ROW_ID]
	LEFT JOIN dbo.[PREV_COMMON_TA] [PREV] WITH (NOLOCK)
		ON [PREV].[REF_ID] = [DREG].[ROW_ID]
	LEFT JOIN BLOCKSUM_TA WITH(NOLOCK)
		ON BLOCKSUM_TA.REF_ID = DREG.ROW_ID
	LEFT JOIN dbo.[DEALS_CORR_TA] [CORS] WITH (NOLOCK)
		ON [CORS].REF_ID = [DREG].[ROW_ID]
	LEFT JOIN dbo.[PROXY_SPEC_TA] AS [PSPEC] WITH (NOLOCK)
		ON [CUST].[ROW_ID] = [PSPEC].[REF_ID]
	LEFT JOIN dbo.[DT015_CUSTOMERS_ACTIONS_TA] [PROXY] WITH (NOLOCK)
		ON [PROXY].[ROW_ID] = [PSPEC].[PROXY_CLIENT_ID]
	LEFT JOIN dbo.[RAZPREG_TA] [DBEN] WITH (NOLOCK)
		ON [PREV].[REF_ID_BEN] = [DBEN].[ROW_ID]
	LEFT JOIN dbo.[DT015_CUSTOMERS_ACTIONS_TA] [CUST_BEN] WITH (NOLOCK)
		ON [CUST_BEN].[ROW_ID] = [DBEN].[REF_ID]
	LEFT JOIN CTE_CUST_EGFN_TYPE WITH(NOLOCK)
		ON CTE_CUST_EGFN_TYPE.NAME = CUST.EGFN_TYPE
	LEFT JOIN CTE_CUSTOMER_CHARACTERISTIC WITH(NOLOCK)
		ON CTE_CUSTOMER_CHARACTERISTIC.NAME = [CUST].[CUSTOMER_CHARACTERISTIC]
	LEFT JOIN CTE_CUSTOMER_AGE WITH(NOLOCK)
		ON CTE_CUSTOMER_AGE.NAME = [CUST].[CUSTOMER_AGE]
	LEFT JOIN CTE_CCY CCY_DEAL WITH(NOLOCK)
		ON CCY_DEAL.NAME = DREG.UI_CURRENCY_CODE
	LEFT JOIN CTE_CCY CCY_CORS WITH(NOLOCK)
		ON CCY_CORS.NAME = [CORS].[CURRENCY]
	LEFT JOIN CTE_CCY CCY_DEAL_BEN WITH(NOLOCK)
		ON CCY_DEAL_BEN.NAME = [DBEN].[UI_CURRENCY_CODE]
	WHERE ([PREV].[DB_TYPE] = 'AIR' AND [PREV].[TA_TYPE] LIKE N'%AIR%')
		OR (BLOCKSUM_TA.DB_TYPE = 'AIR' AND BLOCKSUM_TA.TA_TYPE LIKE N'%AIR%')

GO
